pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "petercephas52/chatbot-django"
        AWS_REGION = "us-east-1"
        CLUSTER_NAME = "chatbot-cluster"
        CONTAINER_NAME = "chatbot-container" 
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/VenkateshV14/Chat-bot-Ai.git'
            }
        }

        stage('Install Python Requirements & Run Tests') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $DOCKER_IMAGE:latest ."
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                withCredentials([string(credentialsId: 'dockerhub-password', variable: 'DOCKERHUB_PASSWORD')]) {
                    sh '''
                        echo "$DOCKERHUB_PASSWORD" | docker login -u petercephas52 --password-stdin
                        docker push petercephas52/chatbot-django:latest
                    '''
                }
            }
        }

        stage('Clean Up Docker Images') {
            steps {
                sh '''
                    echo "ðŸ§¹ Removing old chatbot-django images except latest..."
                    docker images --filter=reference='petercephas52/chatbot-django' --format "{{.ID}} {{.Tag}}" \
                    | grep -v latest | awk '{print $1}' | xargs -r docker rmi || true

                    echo "ðŸ§¹ Removing dangling images..."
                    docker image prune -f || true
                '''
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    sh "aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME"
                    sh "kubectl set image deployment/chatbot-deployment $CONTAINER_NAME=$DOCKER_IMAGE:latest"
                    sh "kubectl rollout restart deployment chatbot-deployment"
                }
            }
        }
    }
}
